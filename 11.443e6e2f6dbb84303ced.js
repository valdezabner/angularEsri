(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"5LEI":function(e,t,i){"use strict";i.d(t,"a",function(){return o}),i("wSAH");var s=i("HJJS"),r=i("rlSK"),n=i("jHF5"),a=i("fEsP");class o extends a.a{constructor(e,t,i,s=i){super(),this.triangleCountReportedInDebug=0,this.transforms={dvs:Object(n.b)(),tileMat3:Object(n.b)()},this.triangleCount=0,this.key=new r.a(e),this.bounds=t,this.size=i,this.coordRange=s}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}get coords(){return this._coords}get bounds(){return this._bounds}set bounds(e){this._coords=[e[0],e[3]],this._bounds=e}setTransform(e,t){const i=t/(e.resolution*e.pixelRatio),r=this.transforms.tileMat3,[n,a]=e.toScreenNoRotation([0,0],this.coords),o=this.size[0]/this.coordRange[0]*i,l=this.size[1]/this.coordRange[1]*i;Object(s.i)(r,o,0,0,0,l,0,n,a,1),Object(s.f)(this.transforms.dvs,e.displayViewMat3,r)}}},KFVX:function(e,t,i){"use strict";i.d(t,"a",function(){return n});var s=i("jIHu"),r=i("5LEI");class n extends r.a{constructor(e,t){super(e,t,[s.E,s.E])}}},Vh9r:function(e,t,i){"use strict";var s=i("HaE+"),r=i("pO5D"),n=i("wSAH"),a=i("srIe"),o=(i("6S2I"),i("zqDF"),i("WbKI")),l=i("04ZG"),d=(i("4EHJ"),i("ju1D"),i("9AIY"),i("9MzC")),c=i("/CmD"),h=i("f4Nx"),u=i("WZb1"),f=i("Mu3I"),p=i("Ehki"),m=i("qatw"),y=i("qRWG"),g=i("kYAx"),x=i("psH3"),_=i("kJYu"),b=i("jIHu"),v=i("sq/B"),O=i("PNY3"),j=i("KLE9"),D=i("9w8m");function w(e,t,i){if(Array.isArray(e)){const s=e[0];if(s>t){const i=Object(D.d)(s,t);e[0]=s+i*(-2*t)}else if(s<i){const t=Object(D.d)(s,i);e[0]=s+t*(-2*i)}}else{const s=e.x;if(s>t){const i=Object(D.d)(s,t);e.x+=i*(-2*t)}else if(s<i){const t=Object(D.d)(s,i);e.x+=t*(-2*i)}}return e}function T(e,t){const[i,s]=t.valid,r=2*s;let n,a=0;return e>s?(n=Math.ceil(Math.abs(e-s)/r),e-=n*r,a=n):e<i&&(n=Math.ceil(Math.abs(e-i)/r),e+=n*r,a=-n),{x:e,frameId:a}}function B(e,t){const{xmin:i,ymin:s,xmax:r,ymax:n}=t;return F(e,i,s)&&F(e,i,n)&&F(e,r,n)&&F(e,r,s)}function F(e,t,i){return t>=e.xmin&&t<=e.xmax&&i>=e.ymin&&i<=e.ymax}class C{cut(e,t){let i;if(e.rings)this.closed=!0,i=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,i=e.paths,this.minPts=2}const s=i.length,r=-2*t;for(let n=0;n<s;n++){const e=i[n];if(e&&e.length>=this.minPts){const t=[];for(const i of e)t.push([i[0]+r,i[1]]);i.push(t)}}return this.closed?e.rings=i:e.paths=i,e}}const I=Object(g.e)();var S=i("t7mB"),R=i("ZxoT"),z=i("HsO1"),L=i("yN2G");function M(e,t,i){if(!e.allDirty)if(null!=e.from&&null!=e.count){const s=Math.min(e.from,t),r=Math.max(e.from+e.count,t+i)-s;e.from=s,e.count=r}else e.from=t,e.count=i}var A=class{constructor(){this._dirties=Object(L.e)(()=>({indices:{from:null,count:null,allDirty:!1}}),()=>({vertices:{from:null,count:null,allDirty:!1}}))}hasDirty(){for(const e of this._dirties)if(null!==e.data.indices.count||e.data.indices.allDirty)return!0;return!1}markAllClean(){for(const e of this._dirties){e.data.indices.from=null,e.data.indices.count=null,e.data.indices.allDirty=!1;for(const t in e.buffers)e.buffers[t].data.vertices.from=null,e.buffers[t].data.vertices.count=null,e.buffers[t].data.vertices.allDirty=!1}}markAllDirty(){for(const e of this._dirties){e.data.indices.allDirty=!0;for(const t in e.buffers)e.buffers[t].data.vertices.allDirty=!0}}forEach(e){for(let t=0;t<this._dirties.length;++t){const i=this._dirties[t],s={};for(const e in i.buffers){const t=i.buffers[e].data.vertices;(t.allDirty||null!=t.from&&null!=t.count&&t.count>0)&&(s[e]=t)}const r=i.data.indices;let n;n=r.allDirty||null!=r.from&&null!=r.count&&r.count>0?{indices:r,vertices:s}:{indices:null,vertices:s},(n.indices||Object.keys(n).length>0)&&e(n,t)}}markDirtyIndices(e,t,i){M(this._dirties[e].data.indices,t,i)}markDirtyVertices(e,t,i,s){M(this._dirties[e].buffers[t].data.vertices,i,s)}};class V{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,i=null;for(;null!==t;)t.count>=e&&(!i||t.count-e<i.count-e)&&(i=t),t=t.next;return i}findAdjacentRanges(e,t){let i=!0,s=!1,r=null,n=this._parent._freeHead;for(;i&&!s;){const a=null!==n?n.from:this._parent._size;e>=(null!==r?r.from+r.count:0)&&e+t<=a?(i=!1,s=!0):null!==n?(r=n,n=n.next):i=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class G{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new V(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const i=t.from,s=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,i,s),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;G._removeRange(t),this._freeHead=e}return i}free(e,t){const[i,s]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:i,next:s};if(null!==i&&(i.next=r),null!==s&&(s.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==s&&r.from+r.count===s.from){const e=r.from,t=r.count;G._fuse(r,s),G._removeRange(s),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(s,void 0,0)}if(null!==i&&i.from+i.count===r.from){const e=i.from,t=i.count;G._fuse(i,r),G._removeRange(r),this._bookKeeper.rangeResized(i,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}const k=["FILL","LINE","MARKER","TEXT","LABEL"];class U{constructor(e,t,i,s){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=i;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:s?new G(s):null,idxFreeList:s?new G(s):null,vertexBuffers:{},indexBuffer:s?new Uint32Array(s):null};for(const t in e[r])this._freeListsAndStorage[r].vertexBuffers[t]={data:s?Object(L.b)(s,e[r][t]):null,stride:e[r][t]}}}static fromTileData(e,t){const i=function(e){const t=e.getStrides(),i={};for(let s=0;s<t.length;s++)i[k[s]]=t[s];return i}(e),s=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const o of n)for(const e of o.displayRecords)s[e.geometryType]=Math.max(s[e.geometryType],e.vertexFrom+e.vertexCount),r[e.geometryType]=Math.max(r[e.geometryType],e.indexFrom+e.indexCount);const a=new U(i,e.tileDisplayData.displayList,t,null);for(let o=0;o<e.tileBufferData.geometries.length;++o){const t=s[o],i=r[o],n=e.tileBufferData.geometries[o],l=a._storageFor(k[o]),d=e.tileBufferData.geometries[o].indexBuffer;let c;l.indexBuffer=d,l.idxFreeList=new G(d.length),l.idxFreeList.allocate(i);for(const s in n.vertexBuffer){const t=e.tileBufferData.geometries[o].vertexBuffer[s];l.vertexBuffers[s].data=t.data,l.vertexBuffers[s].stride=t.stride;const i=Object(L.p)(t.stride),r=t.data.length*i/t.stride;c||(c=r)}l.vtxFreeList=new G(c),l.vtxFreeList.allocate(t)}return a}delete(e){const t=k[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,i,s,r){const n=k[e.geometryType];let a,o;e.meshData=null,void 0===e.vertexFrom?(o=t.vertexCount,a=this._allocateVertices(n,o)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),o=t.vertexCount,a=this._allocateVertices(n,o)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,o=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,o=t.vertexCount);let l,d,c,h=!0;if(void 0===e.indexFrom?(l=r,c=t.indexCount,d=this._allocateIndices(n,c)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),c=t.indexCount,d=this._allocateIndices(n,c)):t.indexCount===e.indexCount?(h=!1,d=e.indexFrom,c=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),d=e.indexFrom,c=t.indexCount),-1!==a&&-1!==d){const r=this._storageFor(n);if(Object(L.d)(a,d,r.vertexBuffers,r.indexBuffer,t,i,s),e.vertexFrom=a,e.indexFrom=d,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return h&&this._displayList.addToList(e,l),!0}return-1!==a&&this._freeVertices(n,a,o),-1!==d&&this._freeIndices(n,d,c),e.setMeshDataFromBuffers(t,i,s),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const i=t.vertexBuffer,s=t.indexBuffer,r=k[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const a=this._allocateIndices(r,e.indexCount);if(-1===a)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,a,e.indexCount),!1;const o=this._storageFor(r);if(Object(L.d)(n,a,o.vertexBuffers,o.indexBuffer,e,i,s),e.vertexFrom=n,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const i=this._storageFor(e),s=i.vtxFreeList.allocate(t);return-1===s||i.vtxFreeList.fragmentation>.5?-1:s}_freeVertices(e,t,i){this._storageFor(e).vtxFreeList.free(t,i)}_freeIndices(e,t,i){this._storageFor(e).idxFreeList.free(t,i)}_allocateIndices(e,t){const i=this._storageFor(e),s=i.idxFreeList.allocate(t);return-1===s||i.idxFreeList.fragmentation>.5?-1:s}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var P=U,E=(i("OKTS"),i("n4uK"),i("fOQB")),K=i("D6bk");i("0meK");var q=i("KFVX");class H extends q.a{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new A}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,i=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new A,this._dispRecStore=P.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||i.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new class{constructor(e){this.geometryMap=Object(L.e)(()=>({indexBuffer:E.a.createIndex(e,35044),vao:null}),(t,i)=>({vertexBuffer:E.a.createVertex(e,L.a[i])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{draw(e,i,s,r,n){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new K.a(e,s,i,r,t.data.indexBuffer)}e.bindVAO(t.data.vao),e.drawElements(4,n,5125,Uint32Array.BYTES_PER_ELEMENT*r),e.bindVAO(null)}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((t,i)=>{this._upload(t,i,e)})}_upload(e,t,i){if(e.indices&&(e.indices.allDirty?this._uploadIndices(i,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(i,t,e.indices.from,e.indices.count)),e.vertices){const s=e.vertices;for(const e in s){const r=s[e];r.allDirty?this._uploadVertices(i,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(i,t,e,r.from,r.count)}}}_uploadVertices(e,t,i,s,r){const n=this.geometryMap[t];if(!n)return;const a=e.geometries[t].vertexBuffer[i];if(!a)return;const o=a.stride,l=a.data.buffer;n.buffers[i]&&l.byteLength>0&&(null!=s&&null!=r?n.buffers[i].data.vertexBuffer.setSubData(l,s*o,s*o,(s+r)*o):n.buffers[i].data.vertexBuffer.setData(l))}_uploadIndices(e,t,i,s){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&n.byteLength>0&&(null!=i&&null!=s?r.data.indexBuffer.setSubData(n,4*i,4*i,4*(i+s)):r.data.indexBuffer.setData(n))}}(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=P.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const i=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],s=(e.remove||[]).slice();for(const r of i)null!=r.insertAfter&&s.push(r.id);for(const r of s){const e=this._data.tileDisplayData.displayObjectRegistry.get(r);if(e){this._data.tileDisplayData.displayList.removeFromList(e.displayRecords);for(const i of e.displayRecords)this._dispRecStore.delete(i);this._data.tileDisplayData.displayObjectRegistry.delete(r);const t=this._data.tileDisplayData.displayObjects.indexOf(e);this._data.tileDisplayData.displayObjects.splice(t,1)}}for(const r of i){let i,s=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(s){const e=s.displayRecords;s.set(r),s.displayRecords=e;const t=s.displayRecords.length;for(let i=0;i<t;++i){const e=s.displayRecords[i],t=r.displayRecords[i];(i>=r.displayRecords.length||e.geometryType!==t.geometryType||e.symbolLevel!==t.symbolLevel||e.zOrder!==t.zOrder||e.materialKey!==t.materialKey)&&(this._dispRecStore.delete(s.displayRecords[i]),i<r.displayRecords.length&&(s.displayRecords[i]=void 0))}s.displayRecords.length=r.displayRecords.length}else{let e;s=r.copy(),s.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,s);const t=this._data.tileDisplayData.displayObjects;if(null!=s.insertAfter)if(i={},s.insertAfter>=0){const i=this._data.tileDisplayData.displayObjectRegistry.get(s.insertAfter);i?(e=t.indexOf(i)+1,e<t.length?t.splice(e,0,s):(t.push(s),e=t.length)):(t.push(s),e=t.length)}else t.unshift(s),e=0;else t.push(s),e=t.length;if(i){const s=r.displayRecords.length>0?1:0;let n=0;for(let r=e-1;r>=0&&n<s;--r)for(let e=t[r].displayRecords.length-1;e>=0&&n<s;--e){const s=t[r].displayRecords[e],a=this._data.tileDisplayData.displayList.getDPInfoType();i[a]||(i[a]=s,++n)}}}const n=r.displayRecords.length;for(let a=0;a<n;++a){const n=r.displayRecords[a];let o=s.displayRecords[a];o?(o.meshData=n.meshData,o.materialKey=n.materialKey):(o=n.copy(),o.vertexFrom=void 0,o.indexFrom=void 0,s.displayRecords[a]=o);const l=n.geometryType,d=this._data.tileDisplayData.displayList.getDPInfoType(),c=e.addOrUpdate.tileBufferData.geometries[l],h=c.vertexBuffer,u=c.indexBuffer;let f;i&&(f=i[d]?this._data.tileDisplayData.displayList.splitAfter(i[d]):-1),t=this._dispRecStore.setMeshData(o,n,h,u,f)&&t,i&&null!=o.indexFrom&&null!=o.indexFrom&&(i[d]=o)}}return t}}var N=i("n21L"),Z=class{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,i){if(!t&&!i)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const s=this._byGeometryType[e];s.vertices+=t,s.indices+=i}};class X{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new X;for(let t=0;t<this.geometries.length;t++){const i=this.geometries[t],s=e.geometries[t];s.indexBuffer=i.indexBuffer.slice(),s.vertexBuffer={};for(const e in i.vertexBuffer){const{data:t,stride:r}=i.vertexBuffer[e];s.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new X;for(let i=0;i<5;++i){t.geometries[i].indexBuffer=new Uint32Array(e.geometries[i].indexBuffer),t.geometries[i].vertexBuffer={};for(const s in e.geometries[i].vertexBuffer)t.geometries[i].vertexBuffer[s]={data:Object(L.c)(e.geometries[i].vertexBuffer[s].data,e.geometries[i].vertexBuffer[s].stride),stride:e.geometries[i].vertexBuffer[s].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const i in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[i]={data:this.geometries[t].vertexBuffer[i].data.buffer,stride:this.geometries[t].vertexBuffer[i].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const i in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[i].data.buffer)}return e}}var Q=X,J=class{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,i){for(const s in e)this.vertexData.set(s,e[s]);for(const s in this.vertexData)null===e[s]&&this.vertexData.delete(s);this.vertexCount=t,this.indexData=i}};class Y{constructor(e,t,i,s=0,r=0){this.id=e,this.geometryType=t,this.materialKey=i,this.minZoom=s,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new Y(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,i){const s=new J;for(const r in t){const i=t[r].stride,n=t[r].data,a=[],o=Object(L.p)(i);for(let t=0;t<i*e.vertexCount/o;++t)a[t]=n[t+i*e.vertexFrom/o];s.vertexData.set(r,a)}s.indexData.length=0;for(let r=0;r<e.indexCount;++r)s.indexData[r]=i[r+e.indexFrom]-e.vertexFrom;s.vertexCount=e.vertexCount,this.meshData=s}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new J;for(const i in e){const t=e[i].stride,s=e[i].data,r=[],n=Object(L.p)(t);for(let e=0;e<t*this.vertexCount/n;++e)r[e]=s[e+t*this.vertexFrom/n];this.meshData.vertexData.set(i,r)}this.meshData.indexData.length=0;for(let i=0;i<this.indexCount;++i)this.meshData.indexData[i]=t[i+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,i,s){for(const r in t){const i=t[r].stride,s=this.meshData.vertexData.get(r),n=t[r].data,a=Object(L.p)(i);for(let t=0;t<i*this.meshData.vertexCount/a;++t)n[t+i*e/a]=s[t]}for(let r=0;r<this.meshData.indexData.length;++r)s[r+i]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,i){let s=0,r=0;for(const n of e)n.writeMeshDataToBuffers(s,t,r,i),s+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const i=e.readInt32(),s=e.readInt32(),r=new Y(t.id,i,s);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}var W=Y;function $(e,t){if(null!==t){e.push(t.length);for(const i of t)i.serialize(e);return e}e.push(0)}class ee{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new ee(this.id);return e.set(this),e}clone(){const e=new ee(this.id);return e.displayRecords=this.displayRecords.map(e=>e.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),$(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),i=new ee(t);return i.displayRecords=function(e,t,i){const s=e.readInt32(),r=new Array(s);for(let n=0;n<r.length;n++)r[n]=t.deserialize(e,i);return r}(e,W,{id:t}),i}}var te=ee,ie=i("yE7X");function se(e,t,i,...s){t<e.length?e.splice(t,i,...s):e.push(...s)}const re=new Map;re.set(ie.c.MAP,[ie.d.FILL,ie.d.LINE,ie.d.MARKER,ie.d.TEXT]),re.set(ie.c.LABEL,[ie.d.LABEL]),re.set(ie.c.LABEL_ALPHA,[ie.d.LABEL]);class ne{constructor(){this.symbolLevels=[]}replay(e,t,i){for(const s of this.symbolLevels)for(const r of s.zLevels){const s=r.geometryDPInfo.unified;if(s)for(const r of s){const s=e.painter.getGeometryBrush(r.geometryType),n=t.getGeometry(r.geometryType),a={geometryType:r.geometryType,materialKey:r.materialKey,indexFrom:r.indexFrom,indexCount:r.indexCount,draw:(e,t,i)=>{n.draw(e,t,i,r.indexFrom,r.indexCount)}};s.prepareState(e,t),s.drawGeometry(e,t,a,i)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const i of e)this._addToList(i,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const i of e)t=this._removeFromList(i);return t}clone(){const e=new ne;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),i=t.length,s=e.indexFrom+e.indexCount;for(let r=0;r<i;++r){const i=t[r];if(i.geometryType===e.geometryType&&s>i.indexFrom&&s<=i.indexFrom+i.indexCount){if(s<i.indexFrom+i.indexCount){const e=new ae;e.geometryType=i.geometryType,e.materialKey=i.materialKey,e.indexFrom=s,e.indexCount=i.indexFrom+i.indexCount-s,t.splice(r+1,0,e),i.indexCount=s-i.indexFrom}return r}}}_addToList(e,t){const i=this._getDisplayList(e.symbolLevel,e.zOrder),s=null!=t?t:i.length-1,r=s>=0&&s<i.length?i[s]:null;if(null!==r&&r.materialKey===e.materialKey&&r.indexFrom+r.indexCount===e.indexFrom&&r.geometryType===e.geometryType)r.indexCount+=e.indexCount;else{const t=new ae;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,se(i,s+1,0,t)}}_removeFromList(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),i=t.length;let s;for(let r=0;r<i;++r){const i=t[r];if(e.indexFrom+e.indexCount>i.indexFrom&&e.indexFrom<i.indexFrom+i.indexCount&&i.geometryType===e.geometryType){s=r;break}}if(void 0!==s){const i=t[s];if(e.indexFrom===i.indexFrom)return i.indexCount-=e.indexCount,i.indexFrom+=e.indexCount,0===i.indexCount&&se(t,s,1),s-1;if(e.indexFrom+e.indexCount===i.indexFrom+i.indexCount)return i.indexCount-=e.indexCount,0===i.indexCount?(se(t,s,1),s-1):s;{const r=i.indexFrom,n=e.indexFrom-i.indexFrom,a=e.indexCount,o=i.indexFrom+i.indexCount-(e.indexFrom+e.indexCount);i.indexCount=n;const l=new ae;return l.geometryType=i.geometryType,l.materialKey=i.materialKey,l.indexFrom=r+n+a,l.indexCount=o,se(t,s+1,0,l),s}}return null}_getDisplayList(e,t){let i;const s=this.symbolLevels.length;for(let a=0;a<s;a++)if(this.symbolLevels[a].symbolLevel===e){i=this.symbolLevels[a];break}let r;i||(i=new de,i.symbolLevel=e,this.symbolLevels.push(i));const n=i.zLevels.length;for(let a=0;a<n;a++)if(i.zLevels[a].zLevel===t){r=i.zLevels[a];break}return r||(r=new le,r.geometryDPInfo=new oe,r.zLevel=t,i.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class ae{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new ae;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class oe{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new oe;return e.fill=this.fill&&this.fill.map(e=>e.clone()),e.line=this.line&&this.line.map(e=>e.clone()),e.marker=this.marker&&this.marker.map(e=>e.clone()),e.text=this.text&&this.text.map(e=>e.clone()),e.label=this.label&&this.label.map(e=>e.clone()),e.unified=this.unified&&this.unified.map(e=>e.clone()),e}}class le{constructor(){this.geometryDPInfo=new oe}clone(){const e=new le;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class de{constructor(){this.zLevels=[]}clone(){const e=new de;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}var ce=ne;class he{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new ce;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new he;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(e=>e.clone())),e}serialize(e){return $(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),i=new Array(t),s=new Map;for(let r=0;r<i.length;++r){const t=te.deserialize(e);i[r]=t,s.set(t.id,t)}this.displayObjects=i,this._displayList=null,this._displayObjectRegistry=s}static deserialize(e){const t=new he;return t._deserializeObjects(e),t}}var ue=he;class fe{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=Object(L.c)(e.data,e.stride);return new fe(t,e.stride)}static fromVertexVector(e){const t=Object(L.c)(e.data.buffer(),e.stride);return new fe(t,e.stride)}}class pe{constructor(e,t,i){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=i}static decode(e){const t=e.geometryType,i=e.indexBuffer,s={};for(const r in e.namedBuffers)s[r]=fe.decode(e.namedBuffers[r]);return new pe(t,i,s)}static fromVertexData(e,t){const i=e.indices,s=Object(L.c)(e.vertices,e.stride),r={geometry:new fe(s,e.stride)};return new pe(t,i,r)}static fromVertexVectors(e){const t=e.geometryType,i=e.indexVector.buffer(),s={};for(const r in e.namedVectors)s[r]=fe.fromVertexVector(e.namedVectors[r]);return new pe(t,i,s)}}var me=i("PeSW");class ye{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const e=this.data.length/(this.stride/4);return e!==(0|e)&&console.debug("Corrupted stride"),e}transfer(e,t){const i=this.data.buffer();e.vertexCount=this.vertexCount,e.data=i,e.stride=this.stride,t.push(i)}}class ge{constructor(e,t,i=!1){this.geometryType=e,this.indexVector=new me.a(Uint32Array,6*t),this.namedVectors={};const s=Object(L.l)(e,i);for(const r in s){const e=s[r];let i;switch(e%4){case 0:case 2:i=new me.a(Uint32Array,e*t);break;case 1:case 3:i=new me.a(Uint8Array,e*t)}this.namedVectors[r]=new ye(i,e)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const i=this.indexVector.buffer(),s={};t.push(i);for(const r in this.namedVectors){const e=this.namedVectors[r];s[r]={},e.transfer(s[r],t)}e.geometryType=this.geometryType,e.indexBuffer=i,e.namedBuffers=s,this.destroy()}intoBuffers(){const e=pe.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const xe=new Z,_e=new Z;function be(e,t){const i={};for(const s in e){const r={data:Object(L.b)(t,e[s]),stride:e[s]};i[s]=r}return i}class ve{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){xe.reset();const e=function(e){const t=[[],[],[],[],[]],i=e;for(const s of i)for(const e of s.displayRecords)t[e.geometryType].push(e);return t}(this.tileDisplayData.displayObjects);for(const s of e)for(const e of s)e&&xe.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,i=new Q;for(let s=0;s<t;++s){i.geometries[s].indexBuffer=new Uint32Array(Math.round(1.5*xe.indicesFor(s)));const e=[];for(const i in this.tileBufferData.geometries[s].vertexBuffer)e.push(this.tileBufferData.geometries[s].vertexBuffer[i].stride);const t=ve._computeVertexAlignment(e),r=Math.round(1.5*xe.verticesFor(s)),n=ve._align(r,t);for(const a in this.tileBufferData.geometries[s].vertexBuffer){const e=this.tileBufferData.geometries[s].vertexBuffer[a].stride;i.geometries[s].vertexBuffer[a]={stride:e,data:Object(L.b)(n,e)}}}_e.reset(),this.tileDisplayData.displayList.clear();for(let s=0;s<t;++s){const t=e[s];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(_e.verticesFor(s),i.geometries[s].vertexBuffer,_e.indicesFor(s),i.geometries[s].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[s].vertexBuffer,r=this.tileBufferData.geometries[s].indexBuffer,n=i.geometries[s].vertexBuffer,a=i.geometries[s].indexBuffer,o=_e.verticesFor(s),l=_e.indicesFor(s);Object(L.d)(o,l,n,a,e,t,r),e.vertexFrom=o,e.indexFrom=l}_e.needMore(s,e.vertexCount,e.indexCount)}}for(const s of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(s.displayRecords);this.tileBufferData=i}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const i=this.tileBufferData.geometries[t];e[t]={};for(const s in i.vertexBuffer)e[t][s]=i.vertexBuffer[s].stride}return e}clone(){const e=new ve;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let i=0;for(let s=0;s<t;s++)i=Math.max(i,e[s].displayRecords.length);return 2*(12*e.length+e.length*i*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),i=this.tileDisplayData.serialize(new me.a(Int32Array,this._guessSize())).buffer();return t.push(i),{result:{displayData:i,bufferData:e},transferList:t}}static fromVertexData(e){const t=[],i={},s=new Map;return Object(L.g)(r=>{const n=e.data[r];if(Object(a.i)(n)){const e=N.a.from(n.records).getCursor();for(;e.next();){const i=e.id,n=e.materialKey,a=e.insertAfter,o=e.indexFrom,l=e.indexCount,d=e.vertexFrom,c=e.vertexCount;if(!s.has(i)){const e=new te(i);e.insertAfter=a,s.set(i,e),t.push(e)}const h=s.get(i),u=new W(i,r,n);u.indexFrom=o,u.indexCount=l,u.vertexFrom=d,u.vertexCount=c,h.displayRecords.push(u)}i[r]=pe.fromVertexData(n,r)}else i[r]=new ge(r,0).intoBuffers()}),t.sort((e,t)=>e.id-t.id),ve.fromMeshData({displayObjects:t,vertexBuffersMap:i})}static fromMeshData(e){const t=new ve,i=new ue,s=new Q;i.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const t=e.vertexBuffersMap[r];s.geometries[r].indexBuffer=t.indexBuffer,s.geometries[r].vertexBuffer=t.namedBuffers}return t.tileDisplayData=i,t.tileBufferData=s,t}static bind(e,t){const i=new ve;return i.tileDisplayData=e,i.tileBufferData=t,i}static create(e,t){const i=new ve;i.tileDisplayData=new ue,i.tileDisplayData.displayObjects=e;const s=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const l of e)for(const e of l.displayRecords)n[e.geometryType].push(e),s[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const a=new Q,o=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let l=0;l<5;l++){const e=new Uint32Array(r[l]),t=be(o[l],s[l]);W.writeAllMeshDataToBuffers(n[l],t,e),a.geometries[l]={indexBuffer:e,vertexBuffer:t}}return i.tileBufferData=a,i}static _align(e,t){const i=e%t;return 0===i?e:e+(t-i)}static _computeVertexAlignment(e){let t=!1,i=!1;for(const s of e)s%4==2?t=!0:s%4!=0&&(i=!0);return i?4:t?2:1}}var Oe=i("2AbE"),je=i("acOm"),De=i("M08Z"),we=i("owVx"),Te=i("Bcjy"),Be=i("Dw8i"),Fe=i("J3nV"),Ce=i("Swtj"),Ie=i("ZlUD"),Se=i("8NDJ"),Re=i("Q0oN");class ze extends Re.a{constructor(e,t){super(e,t,null)}static from(e){const t=Se.a.createInstance(),i=[],s=e.filter(e=>!!e.geometry);for(const r of s){const e=Object(m.c)(r.geometry);Object(Ie.e)(i,[r],e,!1,!1,"uid")}return new ze(t,i)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new ze(this.instance,this._features);return this.copyInto(e),e}}var Le=i("w5u1"),Me=i("IXLn"),Ae=i("+NQI"),Ve=i("gEht"),Ge=i("qNUd"),ke=i("kB+0"),Ue=i("V+VG"),Pe=i("gVKr"),Ee=i("AIxD");const Ke=new Pe.a,qe=new Pe.a,He="esriGeometryPolyline";function Ne(e){e.coords.length=0,e.lengths.length=0}class Ze{constructor(){this.bounds=Object(g.e)(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,i,s,r,n){let a;return 0===Ze._pool.length?a=new Ze:(a=Ze._pool.pop(),this._set.delete(a)),a.acquire(e,t,i,s,r,n),a}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if(Object(m.g)(e.geometry)){const i=e.symbol;if(Object(a.h)(i))return null;if(Object(De.j)(i.type)||Object(De.l)(i.type)){const i=Object(Ue.a)(e.geometry);return Object(Ee.b)(t,{},{x:i[0],y:i[1]},!1,!1)}}return null}acquire(e=null,t,i,s,r,n){e&&this.set(e,t,i,s,r,n)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,i,s,r,n){this.graphic=e,this.geometry=i,this.symbolResource=t,this.updateBounds(s,r,n)}updateBounds(e,t,i){Object(De.c)(this.bounds,this.size,this.symbolResource,this.geometry,e,t,i)}getGeometryQuantized(e){if(Object(m.g)(this.geometry)){const t=this.geometry.rings;if(1===t.length&&2===t[0].length)return Object(Ee.a)(e,{paths:[[t[0][0],t[0][1]]]})}else if(Object(m.h)(this.geometry))return Ne(Ke),Ne(qe),Object(Ie.h)(Ke,this.geometry),Object(Ie.q)(qe,Ke,this.geometry.hasZ,this.geometry.hasM,He,e.scale[0]),Object(Ie.u)(Ke,qe,this.geometry.hasZ,this.geometry.hasM,He,e),Object(Ie.o)(Ke,this.geometry.hasZ,this.geometry.hasM);return Object(Ee.a)(e,this.geometry)}}Ze._pool=[],Ze._set=new Set;var Xe=Ze;const Qe={minX:0,minY:0,maxX:0,maxY:0},Je=Object(g.e)(),Ye=[],We=1e-5;function $e(e,t,i,s,r){return Qe.minX=t,Qe.minY=i,Qe.maxX=s,Qe.maxY=r,e.search(Qe)}var et=i("pdg3");const tt=e=>{let t=class extends(Object(et.a)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null,this.view=null}};return Object(r.a)([Object(o.b)()],t.prototype,"graphics",void 0),Object(r.a)([Object(o.b)()],t.prototype,"renderer",void 0),Object(r.a)([Object(o.b)()],t.prototype,"updating",void 0),Object(r.a)([Object(o.b)()],t.prototype,"view",void 0),t=Object(r.a)([Object(l.a)("esri.views.layers.GraphicsView")],t),t};function it(e,t,i){if(i.has(e))return i.get(e);const s={tile:t,addedOrModified:[],removed:[]};return i.set(e,s),s}let st=class extends(tt(Object(_.b)(c.a))){constructor(e){super(e),this._storage=new Ce.a,this._displayIds=new Map,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashTpExpandedSymbolPromise=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}_createMatcher(e,t){if(e){const i=Object(we.a)({indexCount:0,fields:{}},"feature",e);this._matcher=Object(Te.a)(i,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._tileStore=new Le.a(this.view.featuresTilingScheme),this._attributeStore=new Oe.a({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},Object(v.a)()),this._graphicStore=new class{constructor(e,t,i,s,r,a){this._graphics=s,this._onAdd=r,this._onRemove=a,this._index=Object(ke.a)(9,Object(n.a)("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=i;const o=e.getClosestInfoForScale(t);o&&(this._currentLevel=o.level,this._resolution=this._tileInfoView.getTileResolution(o.level));const l=e.spatialReference;this._metersPerUnit=Object(h.i)(l)?Object(Ve.c)(e.spatialReference):1}hitTest(e,t,i,s,r){e=Object(Ge.b)(e,this._tileInfoView.spatialReference);const n=.5*s*i;Je[0]=e-n,Je[1]=t-n,Je[2]=e+n,Je[3]=t+n;const a=.5*s*(i+De.a),o=$e(this._index,e-a,t-a,e+a,t+a);if(!o||0===o.length)return[];const l={x:e,y:t},d=[];let c;for(const h of o)if(h.graphic.visible)switch(Object(m.c)(h.geometry)){case"esriGeometryPoint":{const e=h.symbol;if(!e)continue;const t=h.geometry,{x:i,y:n}=t,a=s*this._metersPerUnit;let o;switch(e.type){case"esriTS":o=Object(De.f)(i,n,e,h.size,s,r);break;case"expanded-cim":o=Object(De.d)(i,n,e,s,a,r);break;case"esriSMS":case"esriPMS":o=Object(De.e)(i,n,e,s,a,r)}Object(Me.g)(o,l)&&d.push(h)}break;case"esriGeometryPolyline":{const i=h.symbol;if(!i||!i.layers.length)continue;const r=i.layers[0];c=1.5*s*window.devicePixelRatio*Object(y.d)(r.width),Object(De.k)(h.geometry,e,t,c)&&d.push(h)}break;case"esriGeometryEnvelope":{const e=h.geometry,t=Object(g.j)(e.xmin,e.ymin,e.xmax,e.ymax);Object(g.l)(t,Je)&&d.push(h);break}case"esriGeometryPolygon":{if(Object(Me.g)(h.geometry,l)){d.push(h);break}const e=Object(Ae.b)(h.geometry);if(Math.abs(e.ymax-e.ymin)<5*s||Math.abs(e.xmax-e.xmin)<5*s){const t=Object(g.j)(e.xmin,e.ymin,e.xmax,e.ymax);Object(g.l)(t,Je)&&d.push(h)}break}case"esriGeometryMultipoint":{const e=h.symbol;if(!e)continue;const t=h.geometry.points;let i;for(let n=0;n<t.length;n++)if(i="esriTS"===e.type?Object(De.f)(t[n][0],t[n][1],e,h.size,s,r):Object(De.e)(t[n][0],t[n][1],e,s,s*this._metersPerUnit,r),Object(Me.g)(i,l)){d.push(h);break}break}}return d.sort((e,t)=>{const i=Object(De.h)(e.graphic),s=Object(De.h)(t.graphic);return i===s?t.zorder-e.zorder:i-s}),d.map(e=>e.graphic)}getGraphicsData(e,t,i){const s=this._searchForItems(t);if(0===s.length||0===i.length)return[];s.sort((e,t)=>e.zorder-t.zorder),s[0].insertAfter=-1;for(let d=1;d<s.length;d++)s[d].insertAfter=s[d-1].graphic.uid;s.sort((e,t)=>e.graphic.uid-t.graphic.uid),i.sort((e,t)=>e.uid-t.uid);let r,n=0,a=0;const o=[],l={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const d of i){for(a=-2;n<s.length;)if(r=s[n],n++,d.uid===r.graphic.uid){a=r.insertAfter;break}if(!r.geometry||-2===a)continue;const t=r.getGeometryQuantized(l),i={...r.graphic.attributes};i[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),o.push({centroid:Xe.getCentroidQuantized(r,l),geometry:t,attributes:i,symbol:r.symbol,groupId:r.groupId,insertAfter:a,zorder:r.zorder})}return o.sort((e,t)=>e.zorder-t.zorder),o}queryTileData(e,t){const{bounds:i,resolution:s}=t,r=this._searchForItems(t),n=[];return this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[s,s],translate:[i[0],i[3]]}),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,i){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const s=Xe.acquire(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,s),i&&this._index.insert(s),s.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let s=0;s<e.length;s++)i=e[s],t=this._itemByGraphic.get(i),t&&(t.zorder=s)}update(e,t,i){const s=this._itemByGraphic.get(e);s.groupId=null;const r=Object(g.c)(s.bounds);return s.size[0]=s.size[1]=0,this._index.remove(s),s.set(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),i&&this._index.insert(s),{oldBounds:r,newBounds:s.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView.getTileResolution(e);this._resolution=t,this._index.clear(),Ye.length=0,this._itemByGraphic.forEach(e=>{e.updateBounds(this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),e.geometry&&Ye.push(e)}),this._index.load(Ye)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,s){const r=this._uidFieldName;let n,a,o,l;i.sort((e,t)=>e.zorder-t.zorder);for(let d=0;d<i.length;d++){o=i[d],n=o.graphic,a=o.getGeometryQuantized(s),l=0===d?-1:i[d-1].graphic.uid;const c={...o.graphic.attributes};c[r]=n.uid,null==o.groupId&&(o.groupId=t.createTemplateGroup(o.symbol,null)),e.push({centroid:Xe.getCentroidQuantized(o,s),geometry:a,attributes:c,symbol:o.symbol,groupId:o.groupId,insertAfter:l,zorder:o.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,i=e.bounds;if(t.isWrappable){const[s,r]=Object(D.c)(t),n=Math.abs(i[2]-r)<We,a=Math.abs(i[0]-s)<We;if((!n||!a)&&(n||a)){const t=e.resolution;let a;a=Object(g.e)(n?[s,i[1],s+t*De.a,i[3]]:[r-t*De.a,i[1],r,i[3]]);const o=$e(this._index,i[0],i[1],i[2],i[3]),l=$e(this._index,a[0],a[1],a[2],a[3]);return[...new Set([...o,...l])]}}return $e(this._index,i[0],i[1],i[2],i[3])}}(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)},e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)});const e=new Be.a(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,e),this._meshFactory=new Fe.a(null,this.uid,e),this._templateStore=e,this.watch("renderer",t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()}),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",e=>this._graphicsChangeHandler(e)),"graphics"),this._attached=!0,this.notifyChange("updating")})}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return Promise.resolve(null);const i=this.view.toMap(Object(y.b)(e,t));return this.searchFeatures(i).then(e=>e&&e.length?e[0]:null)}searchFeatures(e,t=2){var i=this;return Object(s.a)(function*(){return i._graphicStore.hitTest(e.x,e.y,t,i.view.state.resolution,i.view.state.rotation)})()}update(e){const t=e.state,i=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(i),this._tileStore.setViewState(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:i,newValue:s}=e;switch(i){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,s),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map(e=>this._displayIds.get(e));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===Object(g.o)(t)||0===Object(g.k)(t))return[];const i=Object(De.i)(t,this.view.spatialReference);return Object(a.i)(i)?[...this._tileStore.boundsIntersections(i[0]),...this._tileStore.boundsIntersections(i[1])]:this._tileStore.boundsIntersections(t)}_updateTile(e){var t=this;return Object(s.a)(function*(){const i=e.tile,s=t._getGraphicsData(t._templateStore,i,e.addedOrModified),r=yield t._processGraphics(i,s);return t._patchTile(i.key,{type:"update",addOrUpdate:r,remove:e.removed,end:!0,clear:!1}),r})()}_patchTile(e,t){if(!this._tiles.has(e))return;const i=this._tiles.get(e);this.container.onTileData(i,t),this.container.requestRender()}_graphicsChangeHandler(e){for(const t of e.added)this._pendingUpdate.added.add(t);for(const t of e.moved)this._pendingUpdate.added.add(t);for(const t of e.removed)this._pendingUpdate.added.has(t)?this._pendingUpdate.added.delete(t):this._pendingUpdate.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}_updateGraphics(){var e=this;return Object(s.a)(function*(){e._processing=!0;const{added:t,removed:i,updated:s}=e._getGraphicsToUpdate(),r=e._tilesToUpdate;let n;try{if(!e._graphicStoreUpdate){const t=e.view.state,i=e.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;e._graphicStore.updateLevel(i),e._tileStore.setViewState(t)}const a=[],o=new Array(t.length+i.length);for(let t=0;t<s.length;t++){const i=s[t],l=e._getIntersectingTiles(i);for(const t of l)n=t.id,it(n,t,r).removed.push(e._displayIds.get(i.uid));a.push(e._updateGraphic(i,null)),o[t]=i}const l=s.length;for(let i=0;i<t.length;i++){const s=t[i];o[l+i]=s,e._graphicsSet.add(s),a.push(e._addGraphic(s))}for(const t of i){e._abortProcessingGraphic(t.uid);const i=e._getIntersectingTiles(t);for(const s of i)n=s.id,it(n,s,r).removed.push(e._displayIds.get(t.uid));e._graphicsSet.delete(t),e._graphicStore.remove(t)}let d;e._flipUpdatingGraphics(),yield Promise.all(a);for(let t=0;t<o.length;t++){d=o[t];const i=e._getIntersectingTiles(d);for(const e of i)n=e.id,it(n,e,r).addedOrModified.push(d)}e._graphicStore.updateZ();const c=[];for(const[t,i]of r)c.push(e._updateTile(i));yield Promise.all(c)}catch(a){}for(const o of i){const t=yield e._getSymbolForGraphic(o,{});t&&e._hashToExpandedSymbol.delete(t.hash())}r.clear(),e.notifyChange("updating"),e._processing=!1,e._needsProcessing&&(e._needsProcessing=!1,e._updateGraphics())})()}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return Object(a.h)(e.geometry)?null:{geometryType:Object(m.c)(e.geometry),spatialReference:u.a.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){var i=this;return Object(s.a)(function*(){return Object(a.i)(e.symbol)?e.symbol:Object(a.i)(i.renderer)?i.renderer.getSymbolAsync(e,{scale:i.view.scale,abortOptions:t}):i._getNullSymbol(e)})()}_getSymbolResources(e,t){var i=this;return Object(s.a)(function*(){if(!i.container.stage)return Promise.resolve(null);const s=yield i._getSymbolForGraphic(e,t),r=s.hash();let n=i._hashToExpandedSymbol.get(r);if(!n){let o=i._hashTpExpandedSymbolPromise.get(r);if(o)n=yield o;else{const l=i._getArcadeInfo(e),c=Object(we.c)(s);o=Object(R.a)(c,l,t),i._hashTpExpandedSymbolPromise.set(r,o);try{n=yield o,i._hashTpExpandedSymbolPromise.delete(r),i._hashToExpandedSymbol.set(r,n)}catch(a){i._hashTpExpandedSymbolPromise.delete(r),Object(d.u)(a)}}}if("esriTS"===n.type){const e=[],[t]=Object(S.a)(n.text);for(let i=0;i<t.length;i++)e.push(t.charCodeAt(i));const s={symbol:n,id:0,glyphIds:e},[{mosaicItem:r}]=yield i.container.getMaterialItems([s]);return{symbol:n,mosaicItem:r}}return{symbol:n,mosaicItem:null}})()}_projectAndNormalizeGeometry(e,t){var i=this;return Object(s.a)(function*(){if(Object(a.h)(e.geometry)||"mesh"===e.geometry.type)return Promise.resolve(null);let s=e.geometry;if(Object(m.g)(s))s.rings=s.rings;else if(Object(m.h)(s))s.paths=s.paths;else if(Object(m.d)(s)){const r=yield i._getSymbolForGraphic(e,t);s=Object(De.j)(r.type)||Object(De.l)(r.type)?s.center:p.a.fromExtent(s)}yield Object(z.a)(s.spatialReference,i.view.spatialReference);const r=function(e){if(!e)return null;if("mesh"===e.type)return e.toJSON();let t=null;const i=e.spatialReference,s=Object(h.d)(i);if(!s)return e.toJSON();const r=i.isWebMercator?102100:4326,n=D.a[r].maxX,a=D.a[r].minX,o=D.a[r].plus180Line,l=D.a[r].minus180Line;let d;const c=e.toJSON();if(Object(m.f)(c))d=w(c,n,a);else if(Object(m.e)(c))c.points=c.points.map(e=>w(e,n,a)),d=c;else if(Object(m.d)(c))d=function(e,t){if(!t)return e;const i=function(e,t){const i=[],{ymin:s,ymax:r}=e,n=e.xmax-e.xmin,a=e.xmin,o=e.xmax;let l;const[d,c]=t.valid;l=T(e.xmin,t);const h=l.x,u=l.frameId;l=T(e.xmax,t);const f=l.x,p=l.frameId,m=h===f&&n>0;if(n>2*c){const e={xmin:a<o?h:f,ymin:s,xmax:c,ymax:r},t={xmin:d,ymin:s,xmax:a<o?f:h,ymax:r},n={xmin:0,ymin:s,xmax:c,ymax:r},l={xmin:d,ymin:s,xmax:0,ymax:r},m=[],y=[];B(e,n)&&m.push(u),B(e,l)&&y.push(u),B(t,n)&&m.push(p),B(t,l)&&y.push(p);for(let i=u+1;i<p;i++)m.push(i),y.push(i);i.push({extent:e,frameIds:[u]},{extent:t,frameIds:[p]},{extent:n,frameIds:m},{extent:l,frameIds:y})}else h>f||m?i.push({extent:{xmin:h,ymin:s,xmax:c,ymax:r},frameIds:[u]},{extent:{xmin:d,ymin:s,xmax:f,ymax:r},frameIds:[p]}):i.push({extent:{xmin:h,ymin:s,xmax:f,ymax:r},frameIds:[u]});return i}(e,t).map(e=>e.extent);return i.length<2?i[0]||e:i.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:i.map(e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]])}}(c,s);else if(Object(m.g)(c)||Object(m.h)(c)){const e=I;Object(j.a)(e,c);const i={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},s=Object(D.d)(i.xmin,a)*(2*n),r=0===s?c:function(e,t){const i=Object(D.b)(e);for(const s of i)for(const e of s)e[0]+=t;return e}(c,s);i.xmin+=s,i.xmax+=s,Object(O.a)(i,o)&&i.xmax!==n||Object(O.a)(i,l)&&i.xmin!==a?t=r:d=r}else d=e.toJSON();return null!==t?(new C).cut(t,n):d}(s),n=Object(z.b)(r,s.spatialReference,i.view.spatialReference);return Object(f.a)(n),n})()}_onTileUpdate(e){const t=Object(h.d)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const i of e.removed)this._removeTile(i.key)}_addGraphic(e){var t=this;return Object(s.a)(function*(){t._abortProcessingGraphic(e.uid);const i=Object(d.d)();t._graphicIdToAbortController.set(e.uid,i);const s={signal:i.signal};try{yield t._addOrUpdateGraphic(e,s),t._graphicIdToAbortController.delete(e.uid)}catch(r){if(t._graphicIdToAbortController.delete(e.uid),!Object(d.m)(r))throw r}})()}_updateGraphic(e,t){var i=this;return Object(s.a)(function*(){const s=i._projectAndNormalizeGeometry(e,t),r=i._getSymbolResources(e,t),[n,a]=yield Promise.all([s,r]);i._graphicStore.addOrModify(e,a,n)})()}_addOrUpdateGraphic(e,t){var i=this;return Object(s.a)(function*(){const s=i._projectAndNormalizeGeometry(e,t),r=i._getSymbolResources(e,t);try{const[t,n]=yield Promise.all([s,r]);i._addProjectedGraphic(e,n,t)}catch(n){if(!Object(d.m)(n))throw n}})()}_addProjectedGraphic(e,t,i){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,i)}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds(Object(g.e)(),e),i=new H(e,t);return this._tiles.set(e,i),this.container.addChild(i),i}_addNewTile(e,t){const i=this._addTile(e.key),s=this._graphicStore.queryTileData(this._templateStore,e);if(t){const i=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of s)e.geometry&&(Object(m.f)(e.geometry)||Object(m.e)(e.geometry))&&this._wrapPoints(e,i)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating"),this._processGraphics(e,s).then(e=>{i.patch({type:"update",clear:!1,addOrUpdate:e,remove:[],end:!0}),this._tileUpdateSet.delete(r),this.notifyChange("updating")}).catch(e=>{if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!Object(d.m)(e))throw e})}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const i=this._displayIds.get(e),s=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,s|(t?b.i:0))}_getGraphicsData(e,t,i){const s=Object(h.d)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,i);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of r)t.geometry&&(Object(m.f)(t.geometry)||Object(m.e)(t.geometry))&&this._wrapPoints(t,e)}return r}_wrapPoints(e,t){const i=e.geometry;Object(m.e)(i)?this._wrapMultipoint(i,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const i=e.points,s=[];let r=0,n=0;for(const[a,o]of i){if(s.push([a+r,o]),r=0,t===De.b){const e=5*De.a;a+n<e?(s.push([t,0]),r=-t):a+n>De.b-e&&(s.push([-t,0]),r=t)}else a+n<-De.a?(s.push([t,0]),r=-t):a+n>De.b+De.a&&(s.push([-t,0]),r=t);n+=a}e.points=s}_wrapPoint(e,t){const i=e.geometry;if(t===De.b){const s=5*De.a;i.x<s?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>De.b-s&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}else i.x<-De.a?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>De.b+De.a&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}_processGraphics(e,t,i){var r=this;return Object(s.a)(function*(){if(!t||!t.length||!r._meshFactory)return null;const s=ze.from(t),n=r._meshFactory,a=yield r._matcher;return yield n.analyzeGraphics(s,a,null,null,i),r._attributeStore.sendUpdates(),r._processAnalyzedGraphics(e,s)})()}_processAnalyzedGraphics(e,t){const i=this._meshFactory,s=t.getApproximateSize(),r=t.getCursor(),n=new je.a(e.key.id,{features:s,records:s,metrics:0},!1,!1,!1);for(;r.next();){const e=r.readGraphic();e.insertAfter=-1===e.insertAfter?-1:this._displayIds.get(e.insertAfter),e.displayId=this._displayIds.get(e.attributes[this.uid]),i.writeGraphic(n,r)}const a=n.serialize(e.tileInfoView.tileInfo.isWrappable);return 1!==a.length?new ve:ve.fromVertexData(a[0].message)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return Object(m.h)(t)?x.d:Object(m.g)(t)||Object(m.d)(t)?x.c:x.b}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};Object(r.a)([Object(o.b)({constructOnly:!0})],st.prototype,"requestUpdateCallback",void 0),Object(r.a)([Object(o.b)()],st.prototype,"container",void 0),Object(r.a)([Object(o.b)({constructOnly:!0})],st.prototype,"graphics",void 0),Object(r.a)([Object(o.b)()],st.prototype,"updating",null),Object(r.a)([Object(o.b)()],st.prototype,"view",void 0),Object(r.a)([Object(o.b)()],st.prototype,"updateRequested",void 0),st=Object(r.a)([Object(l.a)("esri.views.2d.layers.support.GraphicsView2D")],st),t.a=st},ZyIX:function(e,t,i){"use strict";var s=i("yE7X"),r=i("b3VY"),n=i("7F7D"),a=i("mgI5");const o=(e,t)=>e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col;t.a=class extends a.a{constructor(e){super(),this._tileInfoView=e}get requiresDedicatedFBO(){return!1}renderChildren(e){this.sortChildren(o),this.setStencilReference(),super.renderChildren(e)}createRenderParams(e){const{state:t}=e;return{...super.createRenderParams(e),requiredLevel:this._tileInfoView.getClosestInfoForScale(t.scale).level,displayLevel:this._tileInfoView.tileInfo.scaleToZoom(t.scale)}}prepareRenderPasses(e){const t=e.registerRenderPass({name:"stencil",brushes:[n.a],drawPhase:s.c.DEBUG|s.c.MAP|s.c.HIGHLIGHT,target:()=>this.getStencilTarget()}),i=e.registerRenderPass({name:"tileInfo",brushes:[r.a],drawPhase:s.c.DEBUG,target:()=>this.children,has:"esri-tiles-debug"});return[...super.prepareRenderPasses(e),t,i]}getStencilTarget(){return this.children}updateTransforms(e){for(const t of this.children){const i=this._tileInfoView.getTileResolution(t.key);t.setTransform(e,i)}}setStencilReference(){let e=1;for(const t of this.children)t.stencilRef=e++}}},by2V:function(e,t,i){"use strict";i.d(t,"a",function(){return C});var s=i("HaE+"),r=i("9MzC"),n=i("jKdI"),a=i("wSAH"),o=i("srIe"),l=i("6S2I"),d=i("zlDU"),c=i("jIHu"),h=(i("n4uK"),i("GVa1"),i("of9L")),u=i("0meK"),f=i("yN2G"),p=i("l8tk");const m=l.a.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),y=Object(p.b)(p.a,m),g=e=>2147483647&e;class x{constructor(e,t,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:n}=e,a=Object(f.j)(r);this.shared=i,this.pixelType=r,this.size=t,this.textureOnly=n,n||(this.data=new a(Object(o.o)(s))),this._resetRange()}destroy(){Object(o.a)(this._texture,e=>e.dispose());for(const e in this._fbos)Object(o.a)(this._fbos[e],t=>{"0"===e&&t.detachColorTexture(),t.dispose()}),this._fbos[e]=null;this._texture=null}get _textureDesc(){return{target:3553,wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size}}setData(e,t,i){const s=g(e),r=Object(o.o)(this.data),n=s*this.texelSize+t;!r||n>=r.length||(r[n]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(e,t){if(Object(o.h)(this.data))return null;const i=g(e)*this.texelSize+t;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(e){return Object(o.p)(this._texture,()=>this._initTexture(e))}getFBO(e,t=0){if(Object(o.h)(this._fbos[t])){const i={colorTarget:0,depthStencilTarget:0},s=0===t?this.getTexture(e):this._textureDesc;this._fbos[t]=new u.a(e,i,s)}return this._fbos[t]}get locked(){return!(5121!==this.pixelType||!this.shared||this.textureOnly||!Object(a.a)("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}updateTexture(e){if(!this.locked)try{const i=this.dirtyStart,s=this.dirtyEnd;if(i>s)return;this._resetRange();const r=Object(o.o)(this.data).buffer,n=this.getTexture(e),a=4,l=(i-i%this.size)/this.size,c=l,h=(s-s%this.size)/this.size,u=l*this.size*a,p=(this.size+h*this.size)*a-u,y=Object(f.j)(this.pixelType),g=y.BYTES_PER_ELEMENT;try{new y(r,u*g,p)}catch(t){}const x=new y(r,u*g,p),_=this.size,b=h-c+1;if(b>this.size)return void m.error(new d.a("mapview-webgl","Out-of-bounds index when updating AttributeData"));n.updateData(0,0,c,_,b,x)}catch(t){}}update(e){const{data:t,start:i,end:s}=e;if(Object(o.i)(t)){const s=this.data,r=i*this.texelSize;for(let i=0;i<t.length;i++)e.layout&1<<i%this.texelSize&&(s[r+i]=t[i])}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(e,t){const i=this.size;if(this.size=t,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=Object(f.j)(this.pixelType);this.destroy(),this.data=new s(Object(o.o)(e.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(e){const t=new h.a(e,this._textureDesc,Object(o.p)(this.data,void 0));if(Object(o.i)(this._lastTexture)&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,n=this._lastTexture.descriptor.pixelFormat,a=this.getFBO(e),o=Object(f.k)(r),l=new(Object(f.j)(r))(new ArrayBuffer(i*s*o*this.texelSize)),d=e.getBoundFramebufferObject(),{x:c,y:h,width:u,height:p}=e.getViewport();e.bindFramebuffer(a),a.readPixels(0,0,i,s,n,r,l),t.updateData(0,0,0,2*i,s/2,l),e.setViewport(c,h,u,p),e.bindFramebuffer(d)}return this.destroy(),this._texture=t,this._texture}}class _{constructor(e){this._onUpdate=e,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(e){const{blocks:t,shared:i,size:s}=e;if(this.shared=i,this.size=s,y("Initializing AttributeStoreView",e),Object(o.h)(this._data))this._data=Object(o.k)(t,e=>new x(e,s,i));else for(let r=0;r<this._data.length;r++){const e=this._data[r],n=t[r];Object(o.i)(n)&&(Object(o.h)(e)?this._data[r]=new x(n,s,i):e.resize(n,s))}this._initialized=!0}destroy(){Object(o.a)(this._data,e=>Object(o.k)(e,e=>e.destroy())),Object(o.a)(this._defaultTexture,e=>e.dispose())}getBlock(e){return Object(o.h)(this._data)?null:this._data[e]}setLabelMinZoom(e,t){this.setData(e,0,1,t)}getLabelMinZoom(e){return this.getData(e,0,1,255)}getFilterFlags(e){return this.getData(e,0,0,0)}getVVSize(e){return this.getData(e,c.b,0,0)}getData(e,t,i,s){if(!this._data)return 0;const r=Object(o.o)(this._data)[t];if(Object(o.h)(r))return 0;const n=r.getData(e,i);return Object(o.i)(n)?n:s}setData(e,t,i,s){const r=Object(o.o)(this._data)[t];Object(o.o)(r).setData(e,i,s)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}requestUpdate(e){var t=this;return Object(s.a)(function*(){if(t._pendingAttributeUpdate)return void m.error(new d.a("mapview-webgl","Tried to update attribute data with a pending update"));const i=Object(r.g)();return y("AttributeStoreView Update Requested",e),t._pendingAttributeUpdate={data:e,resolver:i},i.promise})()}update(){if(this._initialized&&(this._onUpdate(),Object(o.i)(this._pendingAttributeUpdate))){const{data:e,resolver:t}=this._pendingAttributeUpdate,i=Object(o.o)(this._data);for(let s=0;s<e.blocks.length;s++){const t=e.blocks[s],r=i[s];Object(o.a)(r,e=>Object(o.a)(t,t=>{y(`Updating block ${s}`,t),e.update(t)}))}this._pendingAttributeUpdate=null,t()}}bindTextures(e){this.update();const t=this._getDefaultTexture(e);if(!this._initialized)return e.bindTexture(t,c.r),e.bindTexture(t,c.s),e.bindTexture(t,c.t),void e.bindTexture(t,c.u);const i=Object(o.o)(this._data);this._locked&&!this._forceNextUpload||(Object(o.f)(i,t=>t.updateTexture(e)),this._forceNextUpload=!1),e.bindTexture(Object(o.l)(i[0],t,t=>t.getTexture(e)),c.r),e.bindTexture(Object(o.l)(i[1],t,t=>t.getTexture(e)),c.s),e.bindTexture(Object(o.l)(i[2],t,t=>t.getTexture(e)),c.t),e.bindTexture(Object(o.l)(i[3],t,t=>t.getTexture(e)),c.u)}_getDefaultTexture(e){return Object(o.h)(this._defaultTexture)&&(this._defaultTexture=new h.a(e,{wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1},new Uint8Array(4))),this._defaultTexture}}var b=i("ZyIX"),v=i("nvBr"),O=i("qRWG"),j=i("gEht"),D=i("m0D6"),w=i("sq/B");function T(e,t){const i=t.length;if(e<t[0].value||1===i)return t[0].size;for(let s=1;s<i;s++)if(e<t[s].value)return t[s-1].size+(e-t[s-1].value)/(t[s].value-t[s-1].value)*(t[s].size-t[s-1].size);return t[i-1].size}function B(e,t,i=0){if(Object(o.h)(t))return e[i+0]=0,e[i+1]=0,e[i+2]=0,void(e[i+3]=0);const{r:s,g:r,b:n,a:a}=t;e[i+0]=s*a/255,e[i+1]=r*a/255,e[i+2]=n*a/255,e[i+3]=a}class F{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1}}getSizeVVFieldStops(e){const t=this._vvSizeFieldStops;switch(t.type){case"static":return t;case"level-dependent":return Object(o.p)(t.levels[e],()=>{let i=1/0,s=0;for(const o in t.levels){const t=parseFloat(o),r=Math.abs(e-t);r<i&&(i=r,s=t)}if(i===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const r=2**((e-s)/2),n=Object(o.o)(t.levels[s]),a=new Float32Array(n.values);return a[2]*=r,a[3]*=r,{sizes:Object(o.o)(n.sizes),values:a}})}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){Object(o.i)(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,e)}setInfo(e,t,i){switch(Object(o.i)(i)&&i.forEach(e=>this._updateEffects(e)),this._vvInfo=t,e.type){case"dot-density":this._updateDotDensityInfo(e)}}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:Object(w.a)().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(e){Object(o.i)(e)&&e.filter&&e.filter.enabled&&(this.outsideLabelsVisible=e.excludedLabelsVisible)}_updateVisualVariables(e,t){const i=this._vvMaterialParameters;if(i.vvOpacityEnabled=!1,i.vvSizeEnabled=!1,i.vvColorEnabled=!1,i.vvRotationEnabled=!1,!e)return;const s=e.size;if(s){if(i.vvSizeEnabled=!0,s.minMaxValue){const e=s.minMaxValue;let i,r;if(Object(f.n)(e.minSize)&&Object(f.n)(e.maxSize))if(Object(f.o)(e.minSize)&&Object(f.o)(e.maxSize))i=Object(O.d)(e.minSize),r=Object(O.d)(e.maxSize);else{const s=t.scale;i=Object(O.d)(T(s,e.minSize.stops)),r=Object(O.d)(T(s,e.maxSize.stops))}this.vvSizeMinMaxValue.set([e.minDataValue,e.maxDataValue,i,r])}if(s.scaleStops&&(this.vvSizeScaleStopsValue=Object(O.d)(T(t.scale,s.scaleStops.stops))),s.unitValue){const e=Object(j.d)(t.spatialReference)/D.a[s.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=e/t.resolution}s.fieldStops&&(this._vvSizeFieldStops=s.fieldStops)}const r=e.color;r&&(i.vvColorEnabled=!0,this.vvColorValues.set(r.values),this.vvColors.set(r.colors));const n=e.opacity;n&&(i.vvOpacityEnabled=!0,this.vvOpacityValues.set(n.values),this.vvOpacities.set(n.opacities));const a=e.rotation;a&&(i.vvRotationEnabled=!0,i.vvRotationType=a.type)}_updateDotDensityInfo(e){const t=e.attributes;this.ddDotValue=e.dotValue,this.ddDotScale=e.referenceScale,this.ddDotSize=e.dotSize,this.ddDotBlending=e.dotBlendingEnabled,this.ddSeed=e.seed;for(let i=0;i<c.g;i++){const e=i>=t.length?new v.a([0,0,0,0]):t[i].color;B(this.ddColors,e,4*i)}for(let i=0;i<8;i++)this.ddActiveDots[i]=i<e.attributes.length?1:0;B(this.ddBackgroundColor,e.backgroundColor)}}class C extends b.a{constructor(e){super(e),this._rendererInfo=new F,this._materialItemsRequestQueue=new n.a,this.attributeView=new _(()=>this.onAttributeStoreUpdate())}destroy(){this.removeAllChildren(),this.children.forEach(e=>e.destroy()),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(e,t,i){this._rendererInfo.setInfo(e,t,i),this.requestRender()}getMaterialItems(e,t){var i=this;return Object(s.a)(function*(){if(!e||0===e.length)return null;const s=Object(r.g)();return i._materialItemsRequestQueue.push({items:e,abortOptions:t,resolver:s}),i.requestRender(),s.promise})()}doRender(e){if(e.context.capabilities.enable("textureFloat"),e.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop()}super.doRender(e)}renderChildren(e){for(const t of this.children)t.commit(e);this._rendererInfo.update(e.state),super.renderChildren(e)}createRenderParams(e){return{...super.createRenderParams(e),rendererInfo:this._rendererInfo,attributeView:this.attributeView}}onAttributeStoreUpdate(){}_processMaterialItemRequest(e,{items:t,abortOptions:i,resolver:s}){const{painter:r,pixelRatio:n}=e,a=t.map(e=>r.textureManager.rasterizeItem(e.symbol,n,e.glyphIds,i));Promise.all(a).then(e=>{if(!this.stage)return void s.reject();const i=e.map((e,i)=>({id:t[i].id,mosaicItem:e}));s.resolve(i)},s.reject)}}},"kvL/":function(e,t,i){"use strict";var s=i("by2V");t.a=class extends s.a{constructor(e){super(e)}get hasLabels(){return!1}get labelsVisible(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const i of this.children)i.isReady&&i.hasData&&(i.commit(e),e.context.setStencilFunction(514,i.stencilRef,255),i._displayList.replay(e,i,t))}}}}]);