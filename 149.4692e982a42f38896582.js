(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{BUoz:function(e,t,i){"use strict";i.r(t);var s=i("HaE+"),n=i("zlDU"),r=i("f4Nx"),a=i("qatw"),l=i("wdpY"),d=i("Lqtk"),o=i("Z4F+"),u=i("ZlUD"),c=i("gLc9"),p=i("46M0"),y=i("iNG6"),f=i("HsO1"),b=i("ZRfE"),g=i("ZBG3"),m=i("IcpP");const h={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};t.default=class{constructor(){this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}load(e){var t=this;return Object(s.a)(function*(){const i=[];yield t._checkProjection(e.spatialReference);let s=null;e.url&&(s=(yield Object(d.default)(e.url,{responseType:"json"})).data,yield Object(p.c)(s));const a=Object(p.b)(s,{geometryType:e.geometryType}),m=e.fields||a.fields||[],j=null!=e.hasZ?e.hasZ:a.hasZ,I=a.geometryType,F=e.objectIdField||("number"===a.objectIdFieldType?a.objectIdFieldName:"OBJECTID")||"OBJECTID",O=e.spatialReference||r.a;let _=e.timeInfo;if(!I)throw new n.a("geojson-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if("string"===a.objectIdFieldType&&i.push({name:"geojson-layer:unsupported-id-type",message:"Feature ids are of type string and can't be honored."}),m===a.fields&&a.unknownFields.length>0&&i.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:a.unknownFields}}),F){let e=null;m.some(t=>t.name===F&&(e=t,!0))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):m.unshift({alias:F,name:F,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const e of m){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new n.a("geojson-layer:invalid-field-name","field name is missing",{field:e});if(e.name===F&&(e.type="esriFieldTypeOID"),-1===o.a.jsonValues.indexOf(e.type))throw new n.a("geojson-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e})}const E={};t._requiredFields=[];for(const e of m)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const i=Object(l.o)(e);e.nullable||void 0!==i?E[e.name]=i:t._requiredFields.push(e)}if(t._fieldsIndex=new c.a(m),_){if(_.startTimeField){const e=t._fieldsIndex.get(_.startTimeField);e?(_.startTimeField=e.name,e.type="esriFieldTypeDate"):_.startTimeField=null}if(_.endTimeField){const e=t._fieldsIndex.get(_.endTimeField);e?(_.endTimeField=e.name,e.type="esriFieldTypeDate"):_.endTimeField=null}if(_.trackIdField){const e=t._fieldsIndex.get(_.trackIdField);e?_.trackIdField=e.name:(_.trackIdField=null,i.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:_}}))}_.startTimeField||_.endTimeField||(i.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:_}}),_=null)}const T={warnings:i,featureErrors:[],layerDefinition:{...h,drawingInfo:Object(y.c)(I),templates:Object(y.b)(E),extent:null,geometryType:I,objectIdField:F,fields:m,hasZ:!!j,timeInfo:_}};t._queryEngine=new g.a({fields:m,geometryType:I,hasM:!1,hasZ:j,objectIdField:F,spatialReference:O,timeInfo:_,featureStore:new b.a({geometryType:I,hasM:!1,hasZ:j}),cacheSpatialQueries:!0}),t._createDefaultAttributes=Object(y.a)(E,F),t._nextObjectId=a.maxObjectId+1;const q=Object(p.a)(s,{geometryType:I,hasZ:j,objectIdFieldName:"number"===a.objectIdFieldType?F:null});if(!Object(r.c)(O,r.a))for(const e of q)e.geometry&&(e.geometry=Object(u.d)(Object(f.b)(Object(u.k)(e.geometry,I,j,!1),r.a,O)));return t._loadInitialFeatures(T,q),T})()}applyEdits(e){var t=this;return Object(s.a)(function*(){const{spatialReference:i,geometryType:s}=t._queryEngine;return yield Promise.all([Object(m.c)(i,s),Object(f.a)(e.adds,i),Object(f.a)(e.updates,i)]),t._applyEdits(e)})()}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_loadInitialFeatures(e,t){const{featureStore:i,objectIdField:s}=this._queryEngine,n=[];for(const r of t){const t=this._createDefaultAttributes(),i=Object(m.d)(this._fieldsIndex,this._requiredFields,t,r.attributes,!0,e.warnings);i?e.featureErrors.push(i):(this._assignObjectId(t,r.attributes,!0),r.attributes=t,r.objectId=t[s],n.push(r))}if(i.addMany(n),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}_applyEdits(e){const{adds:t,updates:i,deletes:s}=e,n={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(n,t),i&&i.length&&this._applyUpdateEdits(n,i),s&&s.length){for(const e of s)n.deleteResults.push(Object(m.b)(e));this._queryEngine.featureStore.removeManyById(s)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:n}}_applyAddEdits(e,t){const{addResults:i}=e,{geometryType:s,hasM:n,hasZ:r,objectIdField:l,spatialReference:d,featureStore:o}=this._queryEngine,c=[];for(const u of t){if(u.geometry&&s!==Object(a.c)(u.geometry)){i.push(Object(m.a)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=Object(m.d)(this._fieldsIndex,this._requiredFields,t,u.attributes);n?i.push(n):(this._assignObjectId(t,u.attributes),u.attributes=t,null!=u.uid&&(e.uidToObjectId[u.uid]=u.attributes[l]),u.geometry&&(u.geometry=Object(f.b)(Object(m.e)(u.geometry,d),u.geometry.spatialReference,d)),c.push(u),i.push(Object(m.b)(u.attributes[l])))}o.addMany(Object(u.c)([],c,s,r,n,l))}_applyUpdateEdits({updateResults:e},t){const{geometryType:i,hasM:s,hasZ:n,objectIdField:r,spatialReference:l,featureStore:d}=this._queryEngine;for(const o of t){const{attributes:t,geometry:c}=o,p=t&&t[r];if(null==p){e.push(Object(m.a)(`Identifier field ${r} missing`));continue}if(!d.has(p)){e.push(Object(m.a)(`Feature with object id ${p} missing`));continue}const y=Object(u.i)(d.getFeature(p),i,n,s);if(c){if(i!==Object(a.c)(c)){e.push(Object(m.a)("Incorrect geometry type."));continue}y.geometry=Object(f.b)(Object(m.e)(c,l),c.spatialReference,l)}if(t){const i=Object(m.d)(this._fieldsIndex,this._requiredFields,y.attributes,t);if(i){e.push(i);continue}}d.add(Object(u.a)(y,i,n,s,r)),e.push(Object(m.b)(p))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;e[s]=i&&isFinite(t[s])?t[s]:this._nextObjectId++}_checkProjection(e){return Object(s.a)(function*(){try{yield Object(f.a)(r.a,e)}catch{throw new n.a("geojson-layer","Projection not supported")}})()}}}}]);