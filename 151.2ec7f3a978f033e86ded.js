(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{DABJ:function(e,r,t){"use strict";t.r(r);var o=t("HaE+"),s=t("OvF4"),i=(t("4GrV"),t("Piei")),n=t("FFFX"),c=t("ne7T"),a=t("ciAr");r.default=class{decode(e){return Object(o.a)(function*(){const r=yield Object(n.a)(e.data,e.options);return r&&r.toJSON()})()}symbolize(e){e.pixelBlock=i.a.fromJSON(e.pixelBlock),e.extent=e.extent?s.a.fromJSON(e.extent):null;const r=this.symbolizer.symbolize(e);return Promise.resolve(r&&r.toJSON())}updateSymbolizer(e){var r=this;return Object(o.a)(function*(){var t;r.symbolizer=a.a.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null==(t=r.symbolizer)?void 0:t.rendererJSON.type)&&(r.symbolizer.rendererJSON.histograms=e.histograms)})()}stretch(e){const r=this.symbolizer.simpleStretch(i.a.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r&&r.toJSON())}estimateStatisticsHistograms(e){const r=Object(c.g)(i.a.fromJSON(e.srcPixelBlock));return Promise.resolve(r)}split(e){const r=Object(c.n)(i.a.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return r&&r.forEach((e,t)=>{r.set(t,null==e?void 0:e.toJSON())}),Promise.resolve(r)}mosaicAndTransform(e){return Object(o.a)(function*(){const r=e.srcPixelBlocks.map(e=>e?new i.a(e):null),t=Object(c.j)(r,e.srcMosaicSize);if(!e.coefs)return t&&t.toJSON();const o=Object(c.a)(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return o&&o.toJSON()})()}}}}]);